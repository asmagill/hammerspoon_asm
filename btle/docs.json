[
  {
    "Constant" : [

    ],
    "submodules" : [
      "characteristic",
      "descriptor",
      "manager",
      "peripheral",
      "service"
    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Hammerspoon module for Core Bluetooth Objects.",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Hammerspoon module for Core Bluetooth Objects.\n\nThis module provides an interface to the Core Bluetooth OS X Object classes for accessing BTLE devices.\n\nCurrently this module only supports Hammerspoon as a BTLE Manager, not as a BTLE Peripheral.\n\nThis code is still very experimental.",
    "Method" : [

    ],
    "Field" : [

    ],
    "items" : [

    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle"
  },
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Provides support for objects which represent the characteristics of a remote BTLE peripheral’s service.",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Provides support for objects which represent the characteristics of a remote BTLE peripheral’s service.\n\nA characteristic contains a single value and any number of descriptors describing that value. The properties of a characteristic determine how the value of the characteristic can be used and how the descriptors can be accessed.",
    "Method" : [

    ],
    "Field" : [

    ],
    "items" : [

    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle.characteristic"
  },
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Provides support for objects which represent the descriptors of a remote BTLE peripheral’s characteristic.",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Provides support for objects which represent the descriptors of a remote BTLE peripheral’s characteristic.\n\n Descriptors provide further information about a characteristic’s value. For example, they may describe the value in human-readable form and describe how the value should be formatted for presentation purposes. Characteristic descriptors also indicate whether a characteristic’s value is configured on a server (a peripheral) to indicate or notify a client (a central) when the value of the characteristic changes.",
    "Method" : [

    ],
    "Field" : [

    ],
    "items" : [

    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle.descriptor"
  },
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Provides support for managing the discovery of and connections to remote BTLE peripheral devices.",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [
      {
        "doc" : "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.\n\nParameters:\n * None\n\nReturns:\n * a new btleObject",
        "stripped_doc" : [
          "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.",
          ""
        ],
        "def" : "hs._asm.btle.manager.create() -> btleObject",
        "desc" : "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.",
        "notes" : [

        ],
        "signature" : "hs._asm.btle.manager.create() -> btleObject",
        "type" : "Constructor",
        "returns" : [
          " * a new btleObject"
        ],
        "name" : "create",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "doc" : "Provides support for managing the discovery of and connections to remote BTLE peripheral devices.\n\nThis submodule handles scanning for, discovering, and connecting to advertising BTLE peripherals.",
    "Method" : [
      {
        "doc" : "Returns a string indicating the current state of the BTLE manager object.\n\nParameters:\n * None\n\nReturns:\n * a string matching one of the following:\n   * \"unknown\"      - The current state of the central manager is unknown; an update is imminent.\n   * \"resetting\"    - The connection with the system service was momentarily lost; an update is imminent.\n   * \"unsupported\"  - The machine does not support Bluetooth low energy. BTLE requires a mac which supports Bluetooth 4.\n   * \"unauthorized\" - Hammerspoon is not authorized to use Bluetooth low energy.\n   * \"poweredOff\"   - Bluetooth is currently powered off.\n   * \"poweredOn\"    - Bluetooth is currently powered on and available to use.\n\nNotes:\n * If you have set a callback with [hs._asm.btle.manager:setCallback](#setCallback), a state change will generate a callback with the \"didUpdateState\" message.",
        "stripped_doc" : [
          "Returns a string indicating the current state of the BTLE manager object.",
          ""
        ],
        "def" : "hs._asm.btle.manager:state() -> string",
        "desc" : "Returns a string indicating the current state of the BTLE manager object.",
        "notes" : [
          " * If you have set a callback with [hs._asm.btle.manager:setCallback](#setCallback), a state change will generate a callback with the \"didUpdateState\" message."
        ],
        "signature" : "hs._asm.btle.manager:state() -> string",
        "type" : "Method",
        "returns" : [
          " * a string matching one of the following:",
          "   * \"unknown\"      - The current state of the central manager is unknown; an update is imminent.",
          "   * \"resetting\"    - The connection with the system service was momentarily lost; an update is imminent.",
          "   * \"unsupported\"  - The machine does not support Bluetooth low energy. BTLE requires a mac which supports Bluetooth 4.",
          "   * \"unauthorized\" - Hammerspoon is not authorized to use Bluetooth low energy.",
          "   * \"poweredOff\"   - Bluetooth is currently powered off.",
          "   * \"poweredOn\"    - Bluetooth is currently powered on and available to use.",
          ""
        ],
        "name" : "state",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.\n\nParameters:\n * None\n\nReturns:\n * a new btleObject",
        "stripped_doc" : [
          "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.",
          ""
        ],
        "def" : "hs._asm.btle.manager.create() -> btleObject",
        "desc" : "Creates a BTLE Central Manager object to manage the discovery of and connections to remote BTLE peripheral objects.",
        "notes" : [

        ],
        "signature" : "hs._asm.btle.manager.create() -> btleObject",
        "type" : "Constructor",
        "returns" : [
          " * a new btleObject"
        ],
        "name" : "create",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Returns a string indicating the current state of the BTLE manager object.\n\nParameters:\n * None\n\nReturns:\n * a string matching one of the following:\n   * \"unknown\"      - The current state of the central manager is unknown; an update is imminent.\n   * \"resetting\"    - The connection with the system service was momentarily lost; an update is imminent.\n   * \"unsupported\"  - The machine does not support Bluetooth low energy. BTLE requires a mac which supports Bluetooth 4.\n   * \"unauthorized\" - Hammerspoon is not authorized to use Bluetooth low energy.\n   * \"poweredOff\"   - Bluetooth is currently powered off.\n   * \"poweredOn\"    - Bluetooth is currently powered on and available to use.\n\nNotes:\n * If you have set a callback with [hs._asm.btle.manager:setCallback](#setCallback), a state change will generate a callback with the \"didUpdateState\" message.",
        "stripped_doc" : [
          "Returns a string indicating the current state of the BTLE manager object.",
          ""
        ],
        "def" : "hs._asm.btle.manager:state() -> string",
        "desc" : "Returns a string indicating the current state of the BTLE manager object.",
        "notes" : [
          " * If you have set a callback with [hs._asm.btle.manager:setCallback](#setCallback), a state change will generate a callback with the \"didUpdateState\" message."
        ],
        "signature" : "hs._asm.btle.manager:state() -> string",
        "type" : "Method",
        "returns" : [
          " * a string matching one of the following:",
          "   * \"unknown\"      - The current state of the central manager is unknown; an update is imminent.",
          "   * \"resetting\"    - The connection with the system service was momentarily lost; an update is imminent.",
          "   * \"unsupported\"  - The machine does not support Bluetooth low energy. BTLE requires a mac which supports Bluetooth 4.",
          "   * \"unauthorized\" - Hammerspoon is not authorized to use Bluetooth low energy.",
          "   * \"poweredOff\"   - Bluetooth is currently powered off.",
          "   * \"poweredOn\"    - Bluetooth is currently powered on and available to use.",
          ""
        ],
        "name" : "state",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle.manager"
  },
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Provides support for objects which represent remote BTLE peripheral devices that have been discovered or can be connected to.",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Provides support for objects which represent remote BTLE peripheral devices that have been discovered or can be connected to.\n\n Peripherals are identified by universally unique identifiers (UUIDs) and may contain one or more services or provide useful information about their connected signal strength.",
    "Method" : [
      {
        "doc" : "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)\n\nParameters:\n * withResponse - an optional boolean, default false, indicating whether or not the write will be performed as expecting a response (true) or without expecting a response (false).\n\nReturns:\n * an integer specifying the maximum byte size for the data to be written.\n\nNotes:\n * this method is only supported for macOS 10.12 and later; for earlier macOS versions, this method will return -1.",
        "stripped_doc" : [
          "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)",
          ""
        ],
        "def" : "hs._asm.btle.peripheral:maximumWriteSize([withResponse]) -> integer",
        "desc" : "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)",
        "notes" : [
          " * this method is only supported for macOS 10.12 and later; for earlier macOS versions, this method will return -1."
        ],
        "signature" : "hs._asm.btle.peripheral:maximumWriteSize([withResponse]) -> integer",
        "type" : "Method",
        "returns" : [
          " * an integer specifying the maximum byte size for the data to be written.",
          ""
        ],
        "name" : "maximumWriteSize",
        "parameters" : [
          " * withResponse - an optional boolean, default false, indicating whether or not the write will be performed as expecting a response (true) or without expecting a response (false).",
          ""
        ]
      }
    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)\n\nParameters:\n * withResponse - an optional boolean, default false, indicating whether or not the write will be performed as expecting a response (true) or without expecting a response (false).\n\nReturns:\n * an integer specifying the maximum byte size for the data to be written.\n\nNotes:\n * this method is only supported for macOS 10.12 and later; for earlier macOS versions, this method will return -1.",
        "stripped_doc" : [
          "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)",
          ""
        ],
        "def" : "hs._asm.btle.peripheral:maximumWriteSize([withResponse]) -> integer",
        "desc" : "Returns the maximum amount of data, in bytes, that can be sent to a characteristic in a single write. (Only valid in macOS 10.12 and later)",
        "notes" : [
          " * this method is only supported for macOS 10.12 and later; for earlier macOS versions, this method will return -1."
        ],
        "signature" : "hs._asm.btle.peripheral:maximumWriteSize([withResponse]) -> integer",
        "type" : "Method",
        "returns" : [
          " * an integer specifying the maximum byte size for the data to be written.",
          ""
        ],
        "name" : "maximumWriteSize",
        "parameters" : [
          " * withResponse - an optional boolean, default false, indicating whether or not the write will be performed as expecting a response (true) or without expecting a response (false).",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle.peripheral"
  },
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Provides support for objects which represent a BTLE peripheral’s service — a collection of data and associated behaviors for accomplishing a function or feature of a device (or portions of that device).",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Provides support for objects which represent a BTLE peripheral’s service — a collection of data and associated behaviors for accomplishing a function or feature of a device (or portions of that device).\n\nServices are either primary or secondary and may contain a number of characteristics or included services (references to other services).",
    "Method" : [

    ],
    "Field" : [

    ],
    "items" : [

    ],
    "Command" : [

    ],
    "name" : "hs._asm.btle.service"
  }
]
