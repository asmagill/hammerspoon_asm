    kern_return_t          IOConnectAddClient                              (io_connect_t connect, io_connect_t client);
    kern_return_t          IOConnectAddRef                                 (io_connect_t connect);
    kern_return_t          IOConnectGetService                             (io_connect_t connect, io_service_t *service);
    kern_return_t          IOConnectMapMemory                              (io_connect_t connect, uint32_t memoryType, task_port_t intoTask, mach_vm_address_t *atAddress, mach_vm_size_t *ofSize, IOOptionBits options);
    kern_return_t          IOConnectMapMemory64                            (io_connect_t connect, uint32_t memoryType, task_port_t intoTask, mach_vm_address_t *atAddress, mach_vm_size_t *ofSize, IOOptionBits options);
    kern_return_t          IOConnectRelease                                (io_connect_t connect);
    kern_return_t          IOConnectSetCFProperties                        (io_connect_t connect, CFTypeRef properties);
    kern_return_t          IOConnectSetCFProperty                          (io_connect_t connect, CFStringRef propertyName, CFTypeRef property);
    kern_return_t          IOConnectSetNotificationPort                    (io_connect_t connect, uint32_t type, mach_port_t port, uintptr_t reference);
    kern_return_t          IOConnectUnmapMemory                            (io_connect_t connect, uint32_t memoryType, task_port_t fromTask, mach_vm_address_t atAddress);
    kern_return_t          IOConnectUnmapMemory64                          (io_connect_t connect, uint32_t memoryType, task_port_t fromTask, mach_vm_address_t atAddress);

    kern_return_t          IOCreateReceivePort                             (uint32_t msgType, mach_port_t *recvPort);
    void                   IODispatchCalloutFromMessage                    (void *unused, mach_msg_header_t *msg, void *reference);

    kern_return_t          IOServiceClose                                  (io_connect_t connect);
    kern_return_t          IOServiceGetBusyState                           (io_service_t service, uint32_t *busyState);
    kern_return_t          IOServiceMatchPropertyTable                     (io_service_t service, CFDictionaryRef matching, boolean_t *matches);
    kern_return_t          IOServiceOpen                                   (io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect);
    kern_return_t          IOServiceRequestProbe                           (io_service_t service, uint32_t options);
    kern_return_t          IOServiceWaitQuiet                              (io_service_t service, mach_timespec_t *waitTime);

    kern_return_t          IOKitGetBusyState                               (mach_port_t mainPort, uint32_t *busyState);
    kern_return_t          IOKitWaitQuiet                                  (mach_port_t mainPort, mach_timespec_t *waitTime);

    IONotificationPortRef  IONotificationPortCreate                        (mach_port_t mainPort);
    void                   IONotificationPortDestroy                       (IONotificationPortRef notify);
    mach_port_t            IONotificationPortGetMachPort                   (IONotificationPortRef notify);
    CFRunLoopSourceRef     IONotificationPortGetRunLoopSource              (IONotificationPortRef notify);
    void                   IONotificationPortSetDispatchQueue              (IONotificationPortRef notify, dispatch_queue_t queue);

    kern_return_t          IOServiceAddInterestNotification                (IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification);
    kern_return_t          IOServiceAddMatchingNotification                (IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification);
